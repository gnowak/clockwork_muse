trend_scan:
  description: >-
    Use ONLY the Sources JSON provided below. Do NOT call tools. Do NOT invent links, titles, or dates.

    Steps:
    1) Parse the provided Sources (url/site/date/summary).
    2) Cluster overlapping ideas; prefer angles supported by multiple distinct sources.
    3) Rank by frequency across sources and recency (newer dates > older).
    4) Produce **3–5 angles**:
       - Prefer angles with ≥2 distinct evidence URLs.
       - If total sources < 6 and you cannot reach 3 angles otherwise, allow up to **2** angles with a single
         strong source, and set `"weak_evidence": true` on those items.

    Output ONLY a fenced JSON block:
    {
      "topic": "{{ topic | default(topics[0]) }}",
      "angles": [
        {
          "angle": "…",
          "rationale": "1 sentence grounded in the sources",
          "evidence": [
            {"url":"https://...", "site":"example.com", "date":"YYYY-MM-DD or null", "title":"…"}
          ],
          "weak_evidence": false
        }
      ]
    }
  expected_output: >-
    A single fenced JSON block (no prose). Return 3–5 angles. Mark any angle based on a single source as "weak_evidence": true.
  agent: trendhunter
  context_from: outputs/{{ topic | lower | replace(' ', '_') }}/{{ run_id }}/research.md
  output_file: outputs/{{ topic | lower | replace(' ', '_') }}/{{ run_id }}/trends.md


web_research:
  description: >-
    You MUST use tools and you MAY NOT invent links, titles, or dates.

    IMPORTANT: Each tool call takes a single key=value dictionary only.
    Do NOT pass JSON arrays or multiple objects to tools. Call them separately.

    Step 1 — Search (two separate calls):
    Call **Serper** TWICE, as two separate actions, each with exactly one `search_query` string.

    Call A:
      search_query="{{ topic | default(topics[0]) }} (tips OR guide OR how to OR best OR top)
      -vr -\"virtual reality\" -360 -\"360°\" -tour -\"virtual tour\" -promo
      -site:pinterest.com -site:x.com -site:facebook.com -site:instagram.com -site:youtube.com"

    Call B (recency bias):
      search_query="{{ topic | default(topics[0]) }} (tips OR guide OR how to OR best)
      (2024 OR 2025) -vr -\"virtual reality\" -360 -\"360°\" -tour -\"virtual tour\" -promo
      -site:pinterest.com -site:x.com -site:facebook.com -site:instagram.com -site:youtube.com"

    Merge results from A and B. Keep at most 2 URLs per domain.

    Step 2 — Scrape:
    For each kept URL, call **Scrape Website** with `website_url=\"https://...\"`.
    Extract: page_title, site (domain), publication_date (from meta tags or visible text; else null), and a 1-sentence summary.
    If scraping fails, SKIP that URL. Do NOT guess.

    Step 3 — Output (JSON only):
    Return ONLY a fenced JSON block:
    {
      "topic": "{{ topic | default(topics[0]) }}",
      "sources": [
        {"title":"...", "url":"https://...", "site":"example.com", "date":"YYYY-MM-DD or null", "summary":"1 sentence"}
      ]
    }
  expected_output: >-
    A single fenced JSON block (no prose). Include ONLY URLs you successfully scraped; max 2 per domain.
    If nothing could be scraped, output the string "NO_SOURCES_FOUND".
  agent: researcher
  output_file: outputs/{{ topic | lower | replace(' ','_') }}/{{ run_id }}/research.md

outline:
  description: >-
    From the Sources, pick ONE clear angle.
    Output Hook + 3–5 Beats + Close. No tours/promos. Keep total under 35s.
  expected_output: >-
    ## Outline
    Hook:
    Beats:
    - …
    Close:
  agent: writer
  output_file: outputs/{{ topic | lower | replace(' ', '_') }}/{{ run_id }}/outline.md

script:
  description: >-
    Turn the Outline into a 120–160 word script for {{ channels | join(', ') }}.
    If intent = list, structure as: 
    - Hook 
    - Items #5 - #1 (3–5s each, title on screen) 
    - Close. Keep to 35–45s total.
    If intent = tips 
    Use this structure strictly:
    - Hook (1 sentence)
    - Tip 1–5 (imperative voice, ~15–20 words each), map [1],[2]… to Sources
    - Close (1 sentence)
    Do not introduce tours or vendors. Only claim what the Sources support.
  agent: writer
  output_file: outputs/{{ topic | lower | replace(' ', '_') }}/{{ run_id }}/script.md

edit_pass:
  description: >-
    Tighten the script for clarity and pacing, fix hedging, unify tone, and ensure all bracketed references map
    to existing sources. Keep within 160 words.
  expected_output: >-
    Polished script under "Script (final)" in Markdown.
  agent: editor
  output_file: outputs/{{ topic | lower | replace(' ', '_') }}/{{ run_id }}/script.md